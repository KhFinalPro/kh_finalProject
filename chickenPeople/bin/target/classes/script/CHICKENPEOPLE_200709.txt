DROP TABLE STORE_DAILY;
DROP TABLE NOTICE;
DROP TABLE BUNG;
DROP TABLE BUNG_TAG;
DROP TABLE RE_REPLY;
DROP TABLE REPLY;
DROP TABLE MESSAGE;
DROP TABLE ADDRESS;
DROP TABLE REPORT;
DROP TABLE BOARD_LIKE;
DROP TABLE BR_CODE;
DROP TABLE PICTURE;
DROP TABLE BOARD;
DROP TABLE REVIEW;
DROP TABLE STORE_LIKE;
DROP TABLE STORE_INFO;
DROP TABLE BRAND_LIKE;
DROP TABLE ORDER_PRO;
DROP TABLE JUMUN;
DROP TABLE PAYMENT;
DROP TABLE COUPON;
DROP TABLE MAKE_COUP;
DROP TABLE MEMBER;
DROP TABLE R_CODE;
DROP TABLE MENU;
DROP TABLE BRAND;

CREATE TABLE MEMBER (
	USER_ID	NVARCHAR2(200)		NOT NULL,
	USER_NAME	NVARCHAR2(200)		NULL,
	USER_PWD	NVARCHAR2(200)		NOT NULL,
	USER_TEL	NVARCHAR2(200)		NULL,
	USER_EMAIL	NVARCHAR2(200)		NULL,
	LIKE_BRAND	NVARCHAR2(200)		NULL,
	PROPIC	NVARCHAR2(200)		NULL,
	USER_GRADE	NVARCHAR2(200)		NULL,
	USER_LEVEL	NVARCHAR2(200)		NULL,
	ORD_CNT	NUMBER		NULL,
	USER_STATUS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN MEMBER.USER_ID IS '아이디';

COMMENT ON COLUMN MEMBER.USER_NAME IS '이름';

COMMENT ON COLUMN MEMBER.USER_PWD IS '비밀번호';

COMMENT ON COLUMN MEMBER.USER_TEL IS '전화번호';

COMMENT ON COLUMN MEMBER.USER_EMAIL IS '이메일';

COMMENT ON COLUMN MEMBER.LIKE_BRAND IS '선호브랜드';

COMMENT ON COLUMN MEMBER.PROPIC IS '프로필사진';

COMMENT ON COLUMN MEMBER.USER_GRADE IS '등급';

COMMENT ON COLUMN MEMBER.USER_LEVEL IS '회원분류';

COMMENT ON COLUMN MEMBER.ORD_CNT IS '주문횟수';

COMMENT ON COLUMN MEMBER.USER_STATUS IS '탈퇴여부';

CREATE TABLE JUMUN (
	ORD_NUM	NVARCHAR2(200)		NOT NULL,
	ORD_STATUS	NVARCHAR2(200)		NULL,
	ORD_DATE	DATE		NULL,
	ORD_CANCEL	NVARCHAR2(200)		NULL,
	PAY_STATUS	NVARCHAR2(200)		NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN JUMUN.ORD_NUM IS '주문번호';

COMMENT ON COLUMN JUMUN.ORD_STATUS IS '처리상태';

COMMENT ON COLUMN JUMUN.ORD_DATE IS '주문날짜';

COMMENT ON COLUMN JUMUN.ORD_CANCEL IS '취소여부';

COMMENT ON COLUMN JUMUN.PAY_STATUS IS '결제유무';

COMMENT ON COLUMN JUMUN.USER_ID IS '아이디';

CREATE TABLE COUPON (
	COUP_NUM	NVARCHAR2(200)		NOT NULL,
	COUP_C_DATE	DATE		NULL,
	COUP_YN	NVARCHAR2(200)		NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	COUP_SERIAL	NVARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN COUPON.COUP_NUM IS '쿠폰번호';

COMMENT ON COLUMN COUPON.COUP_C_DATE IS '발급날짜';

COMMENT ON COLUMN COUPON.COUP_YN IS '사용여부';

COMMENT ON COLUMN COUPON.USER_ID IS '아이디';

COMMENT ON COLUMN COUPON.COUP_SERIAL IS '쿠폰분류번호';

CREATE TABLE PAYMENT (
	ORD_NUM	NVARCHAR2(200)		NOT NULL,
	PAY_DATE	DATE		NULL,
	PAY_RCV	NVARCHAR2(200)		NULL,
	PAY_ADDR	NVARCHAR2(200)		NULL,
	PAY_TEL	NVARCHAR2(200)		NULL,
	PAY_MSG	NVARCHAR2(1000)		NULL,
	PAY_TOAL	NUMBER		NULL,
	COUP_NUM	NVARCHAR2(200)		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	PAY_METHOD	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN PAYMENT.ORD_NUM IS '주문번호';

COMMENT ON COLUMN PAYMENT.PAY_DATE IS '주문일자';

COMMENT ON COLUMN PAYMENT.PAY_RCV IS '받으실분';

COMMENT ON COLUMN PAYMENT.PAY_ADDR IS '받으실 분 주소';

COMMENT ON COLUMN PAYMENT.PAY_TEL IS '받으실분 전화번호';

COMMENT ON COLUMN PAYMENT.PAY_MSG IS '남기실말';

COMMENT ON COLUMN PAYMENT.PAY_TOAL IS '상품합계금액';

COMMENT ON COLUMN PAYMENT.COUP_NUM IS '쿠폰번호';

COMMENT ON COLUMN PAYMENT.USER_ID IS '아이디';

COMMENT ON COLUMN PAYMENT.PAY_METHOD IS '결제방법';

CREATE TABLE BOARD (
	B_NUM	NUMBER		NOT NULL,
	B_WRITER	NVARCHAR2(200)		NULL,
	B_CATE	NVARCHAR2(200)		NULL,
	B_TITLE	NVARCHAR2(200)		NULL,
	B_CONT	NVARCHAR2(1000)		NULL,
	B_HIT	NUMBER		NULL,
	B_DATE	DATE		NULL,
	B_DEL_DATE	DATE		NULL,
	B_UP_DATE	DATE		NULL,
	B_STATUS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN BOARD.B_NUM IS '게시판번호';

COMMENT ON COLUMN BOARD.B_WRITER IS '작성자';

COMMENT ON COLUMN BOARD.B_CATE IS '분류';

COMMENT ON COLUMN BOARD.B_TITLE IS '게시판 제목';

COMMENT ON COLUMN BOARD.B_CONT IS '게시판 내용';

COMMENT ON COLUMN BOARD.B_HIT IS '조회수';

COMMENT ON COLUMN BOARD.B_DATE IS '글쓴날짜';

COMMENT ON COLUMN BOARD.B_DEL_DATE IS '삭제날짜';

COMMENT ON COLUMN BOARD.B_UP_DATE IS '수정날짜';

COMMENT ON COLUMN BOARD.B_STATUS IS '글삭제 여부';

CREATE TABLE STORE_INFO (
	STO__NUM	NVARCHAR2(200)		NOT NULL,
	STO_NAME	NVARCHAR2(200)		NULL,
	STO_TEL	NVARCHAR2(200)		NULL,
	STO_OPEN	DATE		NULL,
	STO_CLOSE	DATE		NULL,
	STO_ADDR	NVARCHAR2(200)		NULL,
	STO_INTRO	NVARCHAR2(1000)		NULL,
	ORD_LIMIT	NVARCHAR2(200)		NULL,
	DELI_TIME	NVARCHAR2(200)		NULL,
	TAR_MON	NVARCHAR2(200)		NULL,
	ENTER_YN	NVARCHAR2(200)		NULL,
	OPEN_YN	NVARCHAR2(200)		NULL,
	CEO_NAME	NVARCHAR2(200)		NULL,
	DELIVERY	NVARCHAR2(200)		NULL,
	STO_EMAIL	NVARCHAR2(200)		NULL,
	APRV_STATUS	NVARCHAR2(200)		NULL,
	STO_BRAND	NVARCHAR2(200)		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN STORE_INFO.STO__NUM IS '매장번호';

COMMENT ON COLUMN STORE_INFO.STO_NAME IS '매장이름';

COMMENT ON COLUMN STORE_INFO.STO_TEL IS '매장전화번호';

COMMENT ON COLUMN STORE_INFO.STO_OPEN IS '오픈시간';

COMMENT ON COLUMN STORE_INFO.STO_CLOSE IS '마감시간';

COMMENT ON COLUMN STORE_INFO.STO_ADDR IS '매장주소';

COMMENT ON COLUMN STORE_INFO.STO_INTRO IS '매장소개';

COMMENT ON COLUMN STORE_INFO.ORD_LIMIT IS '최소주문금액';

COMMENT ON COLUMN STORE_INFO.DELI_TIME IS '배달시간';

COMMENT ON COLUMN STORE_INFO.TAR_MON IS '목표금액';

COMMENT ON COLUMN STORE_INFO.ENTER_YN IS '입점여부';

COMMENT ON COLUMN STORE_INFO.OPEN_YN IS '영업상태';

COMMENT ON COLUMN STORE_INFO.CEO_NAME IS '대표이름';

COMMENT ON COLUMN STORE_INFO.DELIVERY IS '배달가능여부';

COMMENT ON COLUMN STORE_INFO.STO_EMAIL IS '이메일';

COMMENT ON COLUMN STORE_INFO.APRV_STATUS IS '승인여부';

COMMENT ON COLUMN STORE_INFO.STO_BRAND IS '브랜드명';

COMMENT ON COLUMN STORE_INFO.USER_ID IS '매장고유아이디';

CREATE TABLE MENU (
	MENU_NUM	NUMBER		NOT NULL,
	STO_BRAND	NVARCHAR2(200)		NOT NULL,
	MENU_NAME	NVARCHAR2(200)		NULL,
	MENU_PRICE	NUMBER		NULL,
	MENU_PIC	NVARCHAR2(200)		NULL,
	MENU_EXP	NVARCHAR2(1000)		NULL,
	MENU_YN	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN MENU.MENU_NUM IS '메뉴번호';

COMMENT ON COLUMN MENU.STO_BRAND IS '브랜드명';

COMMENT ON COLUMN MENU.MENU_NAME IS '메뉴';

COMMENT ON COLUMN MENU.MENU_PRICE IS '가격';

COMMENT ON COLUMN MENU.MENU_PIC IS '메뉴사진';

COMMENT ON COLUMN MENU.MENU_EXP IS '메뉴설명';

COMMENT ON COLUMN MENU.MENU_YN IS '메뉴삭제여부';

CREATE TABLE PICTURE (
	PIC_NUM	NUMBER		NOT NULL,
	B_NUM	NUMBER		NOT NULL,
	ORI_FILENAME	NVARCHAR2(200)		NULL,
	UP_FILENAME	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN PICTURE.PIC_NUM IS '사진번호';

COMMENT ON COLUMN PICTURE.B_NUM IS '게시판번호';

COMMENT ON COLUMN PICTURE.ORI_FILENAME IS '원본파일명';

COMMENT ON COLUMN PICTURE.UP_FILENAME IS '수정파일명';

CREATE TABLE ORDER_PRO (
	ORD_NUM	NVARCHAR2(200)		NOT NULL,
	MENU_NUM	NUMBER		NOT NULL,
	STO_BRAND	NVARCHAR2(200)		NOT NULL,
	ORD_AMT	NUMBER		NULL,
	ORD_PRICE	NUMBER		NULL
);

COMMENT ON COLUMN ORDER_PRO.ORD_NUM IS '주문번호';

COMMENT ON COLUMN ORDER_PRO.MENU_NUM IS '메뉴번호';

COMMENT ON COLUMN ORDER_PRO.STO_BRAND IS '브랜드명';

COMMENT ON COLUMN ORDER_PRO.ORD_AMT IS '수량';

COMMENT ON COLUMN ORDER_PRO.ORD_PRICE IS '가격';

CREATE TABLE BUNG (
	BUNG_NUM	NUMBER		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	BUNG_TITLE	NVARCHAR2(200)		NULL,
	BUNG_DATE	DATE		NULL,
	BUNG_ADDR	NVARCHAR2(200)		NULL,
	BUNG_P_NO	NUMBER		NULL,
	BUNG_INT	NVARCHAR2(1000)		NULL,
	BUNG_HIT	NUMBER		NULL,
	BUNG_LIKE	NUMBER		NULL,
	BUNG_CHAT	NUMBER		NULL,
	BUNG_IMG	NVARCHAR2(200)		NULL,
	BUNG_BRD	NVARCHAR2(200)		NULL,
	BUNG_STATUS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN BUNG.BUNG_NUM IS '번개번호';

COMMENT ON COLUMN BUNG.USER_ID IS '등록자아이디';

COMMENT ON COLUMN BUNG.BUNG_TITLE IS '번개제목';

COMMENT ON COLUMN BUNG.BUNG_DATE IS '번개일시';

COMMENT ON COLUMN BUNG.BUNG_ADDR IS '번개주소';

COMMENT ON COLUMN BUNG.BUNG_P_NO IS '인원수';

COMMENT ON COLUMN BUNG.BUNG_INT IS '소개글';

COMMENT ON COLUMN BUNG.BUNG_HIT IS '조회수';

COMMENT ON COLUMN BUNG.BUNG_LIKE IS '좋아요';

COMMENT ON COLUMN BUNG.BUNG_CHAT IS '채팅인원수';

COMMENT ON COLUMN BUNG.BUNG_IMG IS '이미지';

COMMENT ON COLUMN BUNG.BUNG_BRD IS '번개브랜드';

COMMENT ON COLUMN BUNG.BUNG_STATUS IS '번개현황';

CREATE TABLE BUNG_TAG (
	TAG_NUM	NUMBER		NOT NULL,
	TAG_NAME	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN BUNG_TAG.TAG_NUM IS '태그번호';

COMMENT ON COLUMN BUNG_TAG.TAG_NAME IS '태그명';

CREATE TABLE ADDRESS (
	ADDR_NUM	NUMBER		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	POST_CODE	NVARCHAR2(200)		NULL,
	ADDRESS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN ADDRESS.ADDR_NUM IS '배송지번호';

COMMENT ON COLUMN ADDRESS.USER_ID IS '아이디';

COMMENT ON COLUMN ADDRESS.POST_CODE IS '우편번호';

COMMENT ON COLUMN ADDRESS.ADDRESS IS '주소';

CREATE TABLE STORE_LIKE (
	USER_ID	NVARCHAR2(200)		NOT NULL,
	STO_NUM	NVARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN STORE_LIKE.USER_ID IS '아이디';

COMMENT ON COLUMN STORE_LIKE.STO_NUM IS '매장번호';

CREATE TABLE NOTICE (
	N_NUM	NUMBER		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	N_TITLE	NVARCHAR2(200)		NULL,
	N_CONT	NVARCHAR2(1000)		NULL,
	N_WRITER	NVARCHAR2(200)		NULL,
	N_COUNT	NUMBER		NULL,
	N_DATE	DATE		NULL,
	N_DEL_DATE	DATE		NULL,
	N_UP_DATE	DATE		NULL,
	N_STAUTS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN NOTICE.N_NUM IS '공지번호';

COMMENT ON COLUMN NOTICE.USER_ID IS '아이디';

COMMENT ON COLUMN NOTICE.N_TITLE IS '공지제목';

COMMENT ON COLUMN NOTICE.N_CONT IS '공지사항내용';

COMMENT ON COLUMN NOTICE.N_WRITER IS '작성자';

COMMENT ON COLUMN NOTICE.N_COUNT IS '조회수';

COMMENT ON COLUMN NOTICE.N_DATE IS '글쓴 날짜';

COMMENT ON COLUMN NOTICE.N_DEL_DATE IS '삭제 날짜';

COMMENT ON COLUMN NOTICE.N_UP_DATE IS '수정 날짜';

COMMENT ON COLUMN NOTICE.N_STAUTS IS '글 삭제 여부';

CREATE TABLE REPORT (
	RPT_NUM	NUMBER		NULL,
	BR_NUM	NUMBER		NULL,
	RPT_CONTENT	NVARCHAR2(2000)		NULL,
	RPT_DATE	DATE		NULL,
	RPT_STATUS	NVARCHAR2(200)		NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	BR_CODE	NVARCHAR2(200)		NOT NULL,
	RPT_CODE	NVARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN REPORT.RPT_NUM IS '신고번호';

COMMENT ON COLUMN REPORT.BR_NUM IS '번호';

COMMENT ON COLUMN REPORT.RPT_CONTENT IS '내용';

COMMENT ON COLUMN REPORT.RPT_DATE IS '신고일자';

COMMENT ON COLUMN REPORT.RPT_STATUS IS '처리상태';

COMMENT ON COLUMN REPORT.USER_ID IS '아이디';

COMMENT ON COLUMN REPORT.BR_CODE IS '구분코드';

COMMENT ON COLUMN REPORT.RPT_CODE IS '신고코드';

CREATE TABLE STORE_DAILY (
	USER_ID	NVARCHAR2(200)		NOT NULL,
	DAILY_T_PRICE	NVARCHAR2(200)		NULL,
	DAILY_DATE	DATE		NULL,
	DAILY_MENU	NVARCHAR2(200)		NULL,
	DAILY_T_REVIEW	NUMBER		NULL
);

COMMENT ON COLUMN STORE_DAILY.USER_ID IS '매장고유아이디';

COMMENT ON COLUMN STORE_DAILY.DAILY_T_PRICE IS '1일가격합계';

COMMENT ON COLUMN STORE_DAILY.DAILY_DATE IS '일자';

COMMENT ON COLUMN STORE_DAILY.DAILY_MENU IS '1일인기메뉴';

COMMENT ON COLUMN STORE_DAILY.DAILY_T_REVIEW IS '1일평점합계';

CREATE TABLE MESSAGE (
	MSG_NO	NUMBER		NOT NULL,
	SEND_ID	NVARCHAR2(200)		NOT NULL,
	RCV_ID	NVARCHAR2(200)		NULL,
	SEND_DATE	DATE		NULL,
	MSG_TITLE	NVARCHAR2(200)		NULL,
	MSG_CONTENTS	NVARCHAR2(1000)		NULL,
	MSG_STATUS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN MESSAGE.MSG_NO IS '쪽지번호';

COMMENT ON COLUMN MESSAGE.SEND_ID IS '발신인아이디';

COMMENT ON COLUMN MESSAGE.RCV_ID IS '수신인';

COMMENT ON COLUMN MESSAGE.SEND_DATE IS '보낸날짜';

COMMENT ON COLUMN MESSAGE.MSG_TITLE IS '제목';

COMMENT ON COLUMN MESSAGE.MSG_CONTENTS IS '내용';

COMMENT ON COLUMN MESSAGE.MSG_STATUS IS '답장유무';

CREATE TABLE BRAND (
	STO_BRAND	NVARCHAR2(200)		NOT NULL,
	BRAND_PIC	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN BRAND.STO_BRAND IS '브랜드명';

COMMENT ON COLUMN BRAND.BRAND_PIC IS '브랜드사진';

CREATE TABLE REPLY (
	REP1_NUM	NUMBER		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	REP_CONT	NVARCHAR2(1000)		NULL,
	REP_DATE	DATE		NULL,
	REP_UP_DATE	DATE		NULL,
	REP_STATUS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN REPLY.REP1_NUM IS '댓글1번호';

COMMENT ON COLUMN REPLY.USER_ID IS '아이디';

COMMENT ON COLUMN REPLY.REP_CONT IS '댓글내용';

COMMENT ON COLUMN REPLY.REP_DATE IS '댓글 작성 날짜';

COMMENT ON COLUMN REPLY.REP_UP_DATE IS '댓글 수정 날짜';

COMMENT ON COLUMN REPLY.REP_STATUS IS '댓글 삭제 여부';

CREATE TABLE RE_REPLY (
	REP2_NUM	NUMBER		NOT NULL,
	REP1_NUM	NUMBER		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL,
	REP_CONT	NVARCHAR2(1000)		NULL,
	REP_DATE	DATE		NULL,
	REP_UP_DATE	DATE		NULL,
	REP_STATUS	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN RE_REPLY.REP2_NUM IS '댓글2번호';

COMMENT ON COLUMN RE_REPLY.REP1_NUM IS '댓글1번호';

COMMENT ON COLUMN RE_REPLY.USER_ID IS '아이디';

COMMENT ON COLUMN RE_REPLY.REP_CONT IS '댓글 내용';

COMMENT ON COLUMN RE_REPLY.REP_DATE IS '댓글 작성 날짜';

COMMENT ON COLUMN RE_REPLY.REP_UP_DATE IS '댓글 수정 날짜';

COMMENT ON COLUMN RE_REPLY.REP_STATUS IS '댓글 삭제 여부';

CREATE TABLE MAKE_COUP (
	COUP_SERIAL	NVARCHAR2(200)		NOT NULL,
	COUP_NAME	NVARCHAR2(200)		NULL,
	COUP_CONT	NVARCHAR2(1000)		NULL,
	COUP_TERM	DATE		NULL,
	COUP_DISC	NUMBER		NULL
);

COMMENT ON COLUMN MAKE_COUP.COUP_SERIAL IS '쿠폰분류번호';

COMMENT ON COLUMN MAKE_COUP.COUP_NAME IS '쿠폰이름';

COMMENT ON COLUMN MAKE_COUP.COUP_CONT IS '쿠폰내용';

COMMENT ON COLUMN MAKE_COUP.COUP_TERM IS '쿠폰기간';

COMMENT ON COLUMN MAKE_COUP.COUP_DISC IS '할인금액';

CREATE TABLE BOARD_LIKE (
	USER_ID	NVARCHAR2(200)		NOT NULL,
	B_NUM	NUMBER		NOT NULL
);

COMMENT ON COLUMN BOARD_LIKE.USER_ID IS '아이디';

COMMENT ON COLUMN BOARD_LIKE.B_NUM IS '게시판번호';

CREATE TABLE REVIEW (
	REV_NUM	NUMBER		NOT NULL,
	REV_RATE	NUMBER		NULL,
	REV_MENU	NVARCHAR2(200)		NULL,
	REV_PIC	NVARCHAR2(200)		NULL,
	REV_DATE	DATE		NULL,
	REV_CONT	NVARCHAR2(1000)		NULL,
	REV_RE	NVARCHAR2(1000)		NULL,
	STO_NUM	NVARCHAR2(200)		NOT NULL,
	USER_ID	NVARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN REVIEW.REV_NUM IS '리뷰번호';

COMMENT ON COLUMN REVIEW.REV_RATE IS '별점';

COMMENT ON COLUMN REVIEW.REV_MENU IS '메뉴';

COMMENT ON COLUMN REVIEW.REV_PIC IS '리뷰사진';

COMMENT ON COLUMN REVIEW.REV_DATE IS '등록날짜';

COMMENT ON COLUMN REVIEW.REV_CONT IS '리뷰내용';

COMMENT ON COLUMN REVIEW.REV_RE IS '리뷰답변';

COMMENT ON COLUMN REVIEW.STO_NUM IS '매장번호';

COMMENT ON COLUMN REVIEW.USER_ID IS '아이디';

CREATE TABLE BRAND_LIKE (
	USER_ID	NVARCHAR2(200)		NOT NULL,
	STO_BRAND	NVARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN BRAND_LIKE.USER_ID IS '아이디';

COMMENT ON COLUMN BRAND_LIKE.STO_BRAND IS '브랜드명';

CREATE TABLE BR_CODE (
	BR_CODE	NVARCHAR2(200)		NOT NULL,
	BR_CONTENT	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN BR_CODE.BR_CODE IS '구분코드';

COMMENT ON COLUMN BR_CODE.BR_CONTENT IS '구분내용';

CREATE TABLE R_CODE (
	RPT_CODE	NVARCHAR2(200)		NOT NULL,
	RPT_CONTENT	NVARCHAR2(200)		NULL
);

COMMENT ON COLUMN R_CODE.RPT_CODE IS '신고코드';

COMMENT ON COLUMN R_CODE.RPT_CONTENT IS '신고카테고리';

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	USER_ID
);

ALTER TABLE JUMUN ADD CONSTRAINT PK_JUMUN PRIMARY KEY (
	ORD_NUM
);

ALTER TABLE COUPON ADD CONSTRAINT PK_COUPON PRIMARY KEY (
	COUP_NUM
);

ALTER TABLE PAYMENT ADD CONSTRAINT PK_PAYMENT PRIMARY KEY (
	ORD_NUM
);

ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (
	B_NUM
);

ALTER TABLE STORE_INFO ADD CONSTRAINT PK_STORE_INFO PRIMARY KEY (
	STO__NUM
);

ALTER TABLE MENU ADD CONSTRAINT PK_MENU PRIMARY KEY (
	MENU_NUM,
	STO_BRAND
);



ALTER TABLE PICTURE ADD CONSTRAINT PK_PICTURE PRIMARY KEY (
	PIC_NUM,
	B_NUM
);

ALTER TABLE ORDER_PRO ADD CONSTRAINT PK_ORDER_PRO PRIMARY KEY (
	ORD_NUM,
	MENU_NUM,
	STO_BRAND
);

ALTER TABLE BUNG ADD CONSTRAINT PK_BUNG PRIMARY KEY (
	BUNG_NUM,
	USER_ID
);

ALTER TABLE BUNG_TAG ADD CONSTRAINT PK_BUNG_TAG PRIMARY KEY (
	TAG_NUM
);

ALTER TABLE ADDRESS ADD CONSTRAINT PK_ADDRESS PRIMARY KEY (
	ADDR_NUM,
	USER_ID
);

ALTER TABLE STORE_LIKE ADD CONSTRAINT PK_STORE_LIKE PRIMARY KEY (
	USER_ID,
	STO_NUM
);

ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
	N_NUM,
	USER_ID
);

ALTER TABLE REPORT ADD CONSTRAINT PK_REPORT PRIMARY KEY (
	RPT_NUM
);

ALTER TABLE STORE_DAILY ADD CONSTRAINT PK_STORE_DAILY PRIMARY KEY (
	USER_ID
);

ALTER TABLE MESSAGE ADD CONSTRAINT PK_MESSAGE PRIMARY KEY (
	MSG_NO
);

ALTER TABLE BRAND ADD CONSTRAINT PK_BRAND PRIMARY KEY (
	STO_BRAND
);

ALTER TABLE REPLY ADD CONSTRAINT PK_REPLY PRIMARY KEY (
	REP1_NUM,
	USER_ID
);

ALTER TABLE RE_REPLY ADD CONSTRAINT PK_RE_REPLY PRIMARY KEY (
	REP2_NUM
);

ALTER TABLE MAKE_COUP ADD CONSTRAINT PK_MAKE_COUP PRIMARY KEY (
	COUP_SERIAL
);

ALTER TABLE BOARD_LIKE ADD CONSTRAINT PK_BOARD_LIKE PRIMARY KEY (
	USER_ID,
	B_NUM
);

ALTER TABLE REVIEW ADD CONSTRAINT PK_REVIEW PRIMARY KEY (
	REV_NUM
);

ALTER TABLE BRAND_LIKE ADD CONSTRAINT PK_BRAND_LIKE PRIMARY KEY (
	USER_ID,
	STO_BRAND
);

ALTER TABLE BR_CODE ADD CONSTRAINT PK_BR_CODE PRIMARY KEY (
	BR_CODE
);

ALTER TABLE R_CODE ADD CONSTRAINT PK_R_CODE PRIMARY KEY (
	RPT_CODE
);

ALTER TABLE JUMUN ADD CONSTRAINT FK_PAYMENT_TO_JUMUN_1 FOREIGN KEY (
	ORD_NUM
)
REFERENCES PAYMENT (
	ORD_NUM
);

ALTER TABLE JUMUN ADD CONSTRAINT FK_MEMBER_TO_JUMUN_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE COUPON ADD CONSTRAINT FK_MEMBER_TO_COUPON_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE COUPON ADD CONSTRAINT FK_MAKE_COUP_TO_COUPON_1 FOREIGN KEY (
	COUP_SERIAL
)
REFERENCES MAKE_COUP (
	COUP_SERIAL
);

ALTER TABLE PAYMENT ADD CONSTRAINT FK_COUPON_TO_PAYMENT_1 FOREIGN KEY (
	COUP_NUM
)
REFERENCES COUPON (
	COUP_NUM
);

ALTER TABLE PAYMENT ADD CONSTRAINT FK_MEMBER_TO_PAYMENT_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE STORE_INFO ADD CONSTRAINT FK_BRAND_TO_STORE_INFO_1 FOREIGN KEY (
	STO_BRAND
)
REFERENCES BRAND (
	STO_BRAND
);

ALTER TABLE STORE_INFO ADD CONSTRAINT FK_MEMBER_TO_STORE_INFO_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE MENU ADD CONSTRAINT FK_BRAND_TO_MENU_1 FOREIGN KEY (
	STO_BRAND
)
REFERENCES BRAND (
	STO_BRAND
);

ALTER TABLE PICTURE ADD CONSTRAINT FK_BOARD_TO_PICTURE_1 FOREIGN KEY (
	B_NUM
)
REFERENCES BOARD (
	B_NUM
);

ALTER TABLE ORDER_PRO ADD CONSTRAINT FK_JUMUN_TO_ORDER_PRO_1 FOREIGN KEY (
	ORD_NUM
)
REFERENCES JUMUN (
	ORD_NUM
);

ALTER TABLE ORDER_PRO ADD CONSTRAINT FK_MENU_TO_ORDER_PRO_1 FOREIGN KEY (
	MENU_NUM,
    STO_BRAND
)
REFERENCES MENU (
    MENU_NUM,
    STO_BRAND
);

ALTER TABLE ORDER_PRO ADD CONSTRAINT FK_MENU_TO_ORDER_PRO_2 FOREIGN KEY (
	STO_BRAND,
    MENU_NUM
)
REFERENCES MENU (
	STO_BRAND,
    MENU_NUM
);

ALTER TABLE BUNG ADD CONSTRAINT FK_MEMBER_TO_BUNG_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE ADDRESS ADD CONSTRAINT FK_MEMBER_TO_ADDRESS_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE STORE_LIKE ADD CONSTRAINT FK_MEMBER_TO_STORE_LIKE_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE STORE_LIKE ADD CONSTRAINT FK_STORE_INFO_TO_STORE_LIKE_1 FOREIGN KEY (
	STO_NUM
)
REFERENCES STORE_INFO (
	STO__NUM
);

ALTER TABLE NOTICE ADD CONSTRAINT FK_MEMBER_TO_NOTICE_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE REPORT ADD CONSTRAINT FK_MEMBER_TO_REPORT_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE REPORT ADD CONSTRAINT FK_BR_CODE_TO_REPORT_1 FOREIGN KEY (
	BR_CODE
)
REFERENCES BR_CODE (
	BR_CODE
);

ALTER TABLE REPORT ADD CONSTRAINT FK_R_CODE_TO_REPORT_1 FOREIGN KEY (
	RPT_CODE
)
REFERENCES R_CODE (
	RPT_CODE
);

ALTER TABLE MESSAGE ADD CONSTRAINT FK_MEMBER_TO_MESSAGE_1 FOREIGN KEY (
	SEND_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE REPLY ADD CONSTRAINT FK_MEMBER_TO_REPLY_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE RE_REPLY ADD CONSTRAINT FK_REPLY_TO_RE_REPLY_1 FOREIGN KEY (
	REP1_NUM,
    USER_ID
)
REFERENCES REPLY (
	REP1_NUM,
    USER_ID
);

ALTER TABLE RE_REPLY ADD CONSTRAINT FK_REPLY_TO_RE_REPLY_2 FOREIGN KEY (
	USER_ID,
    REP1_NUM
)
REFERENCES REPLY (
	USER_ID,
    REP1_NUM
);

ALTER TABLE BOARD_LIKE ADD CONSTRAINT FK_MEMBER_TO_BOARD_LIKE_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE BOARD_LIKE ADD CONSTRAINT FK_BOARD_TO_BOARD_LIKE_1 FOREIGN KEY (
	B_NUM
)
REFERENCES BOARD (
	B_NUM
);

ALTER TABLE REVIEW ADD CONSTRAINT FK_STORE_INFO_TO_REVIEW_1 FOREIGN KEY (
	STO_NUM
)
REFERENCES STORE_INFO (
	STO__NUM
);

ALTER TABLE REVIEW ADD CONSTRAINT FK_MEMBER_TO_REVIEW_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE BRAND_LIKE ADD CONSTRAINT FK_MEMBER_TO_BRAND_LIKE_1 FOREIGN KEY (
	USER_ID
)
REFERENCES MEMBER (
	USER_ID
);

ALTER TABLE BRAND_LIKE ADD CONSTRAINT FK_BRAND_TO_BRAND_LIKE_1 FOREIGN KEY (
	STO_BRAND
)
REFERENCES BRAND (
	STO_BRAND
);





